extends layout

block content
    h1= title
    if success.isSuccess
        h2.success= success.msg
    if Object.values(errors) != 0
        h2.error= success.msg
        .errors-block
            ul
                - var errPoints = []
                each err in Object.values(errors)
                    - errPoints.push(err.param)
                        li= err.msg
    form(method="post" action="#{action}" enctype="multipart/form-data").register-form
        div.input-block
            label(for="company") Оператор: *
            select(type="text" name="company" rows="1").form-select
                each company in data.companies
                    - var isSelected = data.selected === company.shortName
                    option(value="#{company.shortName}" selected=isSelected)= company.shortName
        div.input-block
            label(for="title") Название экскурсии: *
            input(type="text" name="title" value="#{data.body.title ? data.body.title : ''}").form-control
        div.input-block
            label(for="description") Описание экскурсии:
            textarea(type="text" name="description" rows="1").form-control #{data.body.description ? data.body.description : ''}
        div.input-block
            label(for="price") Стоимость экскурсии: *
            input(type="text" name="price" value="#{data.body.price ? data.body.price : ''}").form-control
        div.input-block
            label(for="pictures") Изображения:
            input(type="file" name="pictures" multiple accept=".jpg, .jpeg, .png").form-control
        div.input-block.approve
            label(for="isApproved") Одобрено:
            input(type="checkbox" name="isApproved" checked=data.body.isApproved)
        div.input-block
            .required-attention *Поля обязательные к заполнению
            .btn-group
                button(type="submit").btn.btn-success Сохранить
                button(type="reset" title="Работает для вновь введённых данных").btn.btn-warning Очистить
                button(type="button").btn.cancelBtn.btn-danger Отмена
    .pictures-block
        if data.pictures
            each picture in data.pictures
                .pictures-block__item
                    img(src="/images/upload/#{picture}" alt="").pictures-block__img
                    button.delete-img.btn.btn-danger Удалить

    script.
        const inputs = document.querySelectorAll('input')
        const points = '#{errPoints}'
        const cancelBtn = document.querySelectorAll('.cancelBtn')
        const deleteImgBtns = document.querySelectorAll('.delete-img')

        inputs.forEach((input) => {
            if (points.includes(input.name)) {
                input.classList.add('error')
            }
        })

        cancelBtn.forEach( (btn) => {
            btn.addEventListener('click', () => {
                window.location.replace('/excursions-list')
            })
        })

        deleteImgBtns.forEach( (btn, i) => {
            let index = i
            btn.addEventListener('click', (e) => {
                let xhr = new XMLHttpRequest()
                if (index > 0){
                    index -= 1
                }
                let json = JSON.stringify({
                    action: 'delete',
                    index: index
                })


                xhr.open('DELETE', '#{action}', true)
                xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8')

                xhr.send(json)

                xhr.responseType = 'json'

                xhr.onload = function() {
                    let responseObj = xhr.response
                    if (responseObj.success) {
                        btn.parentNode.style.display = 'none' 
                    }
                    else {
                        console.error(responseObj.error)
                    }
                }
            })
        })
